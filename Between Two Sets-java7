import java.util.*;

public class Solution {
    
    // Method to get the GCD of two numbers
    static int getGCD(int n1, int n2) {
        if (n2 == 0) {
            return n1;
        }
        return getGCD(n2, n1 % n2);
    }

    // Method to get the LCM of two numbers
    static int getLCM(int n1, int n2) {
        if (n1 == 0 || n2 == 0) {
            return 0;
        } else {
            int gcd = getGCD(n1, n2);
            return Math.abs(n1 * n2) / gcd;
        }
    }

    // Method to find the total number of integers that are multiples of all elements in a and divisors of all elements in b
    public static int getTotalX(List<Integer> a, List<Integer> b) {
        int result = 0;

        // Get LCM of all elements of a
        int lcm = a.get(0);
        for (Integer integer : a) {
            lcm = getLCM(lcm, integer);
        }

        // Get GCD of all elements of b
        int gcd = b.get(0);
        for (Integer integer : b) {
            gcd = getGCD(gcd, integer);
        }

        // Count multiples of lcm that divide the gcd
        int multiple = 0;
        while (multiple <= gcd) {
            multiple += lcm;
            if (gcd % multiple == 0)
                result++;
        }

        return result;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        
        List<Integer> a = new ArrayList<>();
        List<Integer> b = new ArrayList<>();
        
        for (int i = 0; i < n; i++) {
            a.add(scanner.nextInt());
        }
        
        for (int i = 0; i < m; i++) {
            b.add(scanner.nextInt());
        }
        
        int total = getTotalX(a, b);
        System.out.println(total);
        
        scanner.close();
    }
}
